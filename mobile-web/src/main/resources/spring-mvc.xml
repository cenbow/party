<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:task="http://www.springframework.org/schema/task" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
    http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"
       default-autowire="byName">

    <context:property-placeholder location="classpath:party.properties" ignore-unresolvable="true" file-encoding="utf-8"/>
    <context:component-scan base-package="com.party,com.party.authorization" use-default-filters="true">
    </context:component-scan>

    <!--开启这个配置，spring才能识别@Scheduled注解   -->
    <task:annotation-driven scheduler="qbScheduler"/>
    <task:scheduler id="qbScheduler" pool-size="10"/>

    <!-- hibernate validator校验器 -->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>

    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="fileEncodings" value="utf-8"/>
        <property name="cacheSeconds" value="120"/>
    </bean>

    <mvc:annotation-driven conversion-service="conversionService" validator="validator">
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter"/>

            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="features">
                    <util:list>
                        <value>WriteMapNullValue</value>
                        <value>WriteDateUseDateFormat</value>
                        <value>WriteNullStringAsEmpty</value>
                    </util:list>
                </property>
            </bean>

            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/plain;charset=utf-8</value>
                        <value>text/html;charset=utf-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>

        <mvc:argument-resolvers>
            <bean class="com.party.common.spring.PagingParams"/>
        </mvc:argument-resolvers>
    </mvc:annotation-driven>

    <!-- 对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理 -->
    <mvc:default-servlet-handler />

    <mvc:interceptors>
        <!-- 登陆授权拦截-->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <ref bean="authorizationInterceptor"/>
        </mvc:interceptor>

        <!-- 分享页面拦截-->
        <mvc:interceptor>
            <mvc:mapping path="/crowdfund/represent/getRepresent.do"/>
            <mvc:mapping path="/activity/activity/distribution/details.do"/>
            <mvc:mapping path="/goods/goods/distribution/detail.do"/>
            <mvc:mapping path="/article/article/distribution/detail.do"/>
            <ref bean="shareInterceptor"></ref>
        </mvc:interceptor>

        <mvc:interceptor>
            <mvc:mapping path="/activity/activity/getDetails.do"/>
            <mvc:mapping path="/goods/goods/getDetails.do"/>
            <mvc:mapping path="/article/article/getDetails.do"/>
            <mvc:mapping path="/crowdfund/project/getDetails.do"/>
            <ref bean="dataCountInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <mvc:annotation-driven>
        <mvc:argument-resolvers>
            <!--配置注入登录用户的解析器-->
            <bean id="currentUserMethodArgumentResolver" class="com.party.authorization.resolvers.CurrentUserMethodArgumentResolver">
                <!--需要解析的用户类-->
                <property name="userModelClass" value="com.party.mobile.web.dto.login.input.LoginInput" />
                <!--查询用户的bean-->
                <property name="userModelRepository" ref="userRepository" />
            </bean>
        </mvc:argument-resolvers>
    </mvc:annotation-driven>

    <!--身份验证的拦截器-->
    <bean id="authorizationInterceptor" class="com.party.authorization.interceptor.AuthorizationInterceptor">
        <!--验证信息通用前缀，例如Bearer-->
        <property name="httpHeaderPrefix" value="" />
        <!--验证失败时的错误信息-->
        <property name="unauthorizedErrorMessage" value="令牌失效，请重新登录" />
        <!--管理验证信息的bean-->
        <property name="manager" ref="tokenManager" />
    </bean>

    <!--通过Key获得对应用户的bean-->
    <bean id="userRepository" class="com.party.mobile.biz.currentUser.CurrentUserBizService" />


    <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean"/>


    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/"></property> <!-- 视图文件的前缀 -->
        <property name="suffix" value=".jsp"></property> <!-- 视图文件的后缀名 -->
    </bean>

    <aop:config proxy-target-class="true" />

    <!-- shiro注解拦截 -->
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <!-- 控制器异常处理 -->
    <bean class="com.party.mobile.web.handler.ExceptionHandler"/>

</beans>
